name: Download Latest Stocks

# Controls when the action will run. 
on:
  schedule:
    - cron: "0 0 * * *"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  fetch:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Generate NASDAQ Data
      - name: Create NASDAQ directory
        run: mkdir -p $GITHUB_WORKSPACE/nasdaq
      
      - name: Fetch NASDAQ stock data
        run: |
          curl --fail --user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:85.0) Gecko/20100101 Firefox/85.0' \
            'https://api.nasdaq.com/api/screener/stocks?tableonly=true&limit=25&offset=0&exchange=NASDAQ&download=true' \
            -o /tmp/nasdaq.json
      
      - name: Generate NASDAQ full tickers JSON
        run: "cat /tmp/nasdaq.json | jq '.data.rows' > $GITHUB_WORKSPACE/nasdaq/nasdaq_full_tickers.json"
      
      - name: Generate NASDAQ tickers JSON array
        run: "cat /tmp/nasdaq.json | jq '[.data.rows | .[] | .symbol]' > $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.json"
      
      - name: Generate NASDAQ tickers text file
        run: "cat /tmp/nasdaq.json | jq -r '.data.rows | .[] | .symbol' > $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt"
      
      # Generate NYSE Data
      - name: Create NYSE directory
        run: mkdir -p $GITHUB_WORKSPACE/nyse
      
      - name: Fetch NYSE stock data
        run: |
          curl --fail --user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:85.0) Gecko/20100101 Firefox/85.0' \
            'https://api.nasdaq.com/api/screener/stocks?tableonly=true&limit=25&offset=0&exchange=NYSE&download=true' \
            -o /tmp/nyse.json
      
      - name: Generate NYSE full tickers JSON
        run: "cat /tmp/nyse.json | jq '.data.rows' > $GITHUB_WORKSPACE/nyse/nyse_full_tickers.json"
      
      - name: Generate NYSE tickers JSON array
        run: "cat /tmp/nyse.json | jq '[.data.rows | .[] | .symbol]' > $GITHUB_WORKSPACE/nyse/nyse_tickers.json"
      
      - name: Generate NYSE tickers text file
        run: "cat /tmp/nyse.json | jq -r '.data.rows | .[] | .symbol' > $GITHUB_WORKSPACE/nyse/nyse_tickers.txt"
      # Generate AMEX Data
      - name: Create AMEX directory
        run: mkdir -p $GITHUB_WORKSPACE/amex
      
      - name: Fetch AMEX stock data
        run: |
          curl --fail --user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:85.0) Gecko/20100101 Firefox/85.0' \
            'https://api.nasdaq.com/api/screener/stocks?tableonly=true&limit=25&offset=0&exchange=AMEX&download=true' \
            -o /tmp/amex.json
      
      - name: Generate AMEX full tickers JSON
        run: "cat /tmp/amex.json | jq '.data.rows' > $GITHUB_WORKSPACE/amex/amex_full_tickers.json"
      
      - name: Generate AMEX tickers JSON array
        run: "cat /tmp/amex.json | jq '[.data.rows | .[] | .symbol]' > $GITHUB_WORKSPACE/amex/amex_tickers.json"
      
      - name: Generate AMEX tickers text file
        run: "cat /tmp/amex.json | jq -r '.data.rows | .[] | .symbol' > $GITHUB_WORKSPACE/amex/amex_tickers.txt"
      
      # Fetch and merge market cap data into NYSE and NASDAQ
      - name: Fetch market cap stock data
        run: |
          curl --fail --user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:85.0) Gecko/20100101 Firefox/85.0' \
            'https://api.nasdaq.com/api/screener/stocks?tableonly=true&limit=25&offset=0&marketcap=mid|large|mega|small|micro|nano&download=true' \
            -o /tmp/marketcap.json
      
      - name: Extract and merge market cap data into exchange lists
        run: |
          # Get all market cap tickers
          cat /tmp/marketcap.json | jq -r '.data.rows[] | .symbol' > /tmp/all_marketcap_tickers.txt
          
          # Create combined list of existing tickers for comparison
          cat $GITHUB_WORKSPACE/amex/amex_tickers.txt $GITHUB_WORKSPACE/nyse/nyse_tickers.txt $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt | sort -u > /tmp/existing_tickers.txt
          
          # Find new tickers that aren't in any existing exchange
          comm -23 <(sort /tmp/all_marketcap_tickers.txt) <(sort /tmp/existing_tickers.txt) > /tmp/new_marketcap_tickers.txt
          
          # Log the results
          NEW_COUNT=$(wc -l < /tmp/new_marketcap_tickers.txt)
          TOTAL_MARKETCAP=$(wc -l < /tmp/all_marketcap_tickers.txt)
          
          echo "=== Market Cap Ticker Analysis ==="
          echo "Total market cap tickers fetched: $TOTAL_MARKETCAP"
          echo "New tickers not in any existing exchange: $NEW_COUNT"
          
          if [ $NEW_COUNT -gt 0 ]; then
            echo "New tickers being added to NYSE and NASDAQ:"
            cat /tmp/new_marketcap_tickers.txt | head -20
            if [ $NEW_COUNT -gt 20 ]; then
              echo "... and $(($NEW_COUNT - 20)) more"
            fi
            
            # Add new tickers to both NYSE and NASDAQ
            cat $GITHUB_WORKSPACE/nyse/nyse_tickers.txt /tmp/new_marketcap_tickers.txt | sort -u > /tmp/nyse_merged.txt
            cat $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt /tmp/new_marketcap_tickers.txt | sort -u > /tmp/nasdaq_merged.txt
            
            mv /tmp/nyse_merged.txt $GITHUB_WORKSPACE/nyse/nyse_tickers.txt
            mv /tmp/nasdaq_merged.txt $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt
            
            # Add new ticker objects to full JSON files
            cat /tmp/marketcap.json | jq --argjson new_tickers "$(cat /tmp/new_marketcap_tickers.txt | jq -R -s 'split("\n")[:-1]')" '.data.rows | map(select(.symbol | IN($new_tickers[])))' > /tmp/new_ticker_objects.json
            
            jq -s '.[0] + .[1] | unique_by(.symbol)' $GITHUB_WORKSPACE/nyse/nyse_full_tickers.json /tmp/new_ticker_objects.json > /tmp/nyse_full_merged.json
            jq -s '.[0] + .[1] | unique_by(.symbol)' $GITHUB_WORKSPACE/nasdaq/nasdaq_full_tickers.json /tmp/new_ticker_objects.json > /tmp/nasdaq_full_merged.json
            
            mv /tmp/nyse_full_merged.json $GITHUB_WORKSPACE/nyse/nyse_full_tickers.json
            mv /tmp/nasdaq_full_merged.json $GITHUB_WORKSPACE/nasdaq/nasdaq_full_tickers.json
            
            # Update JSON arrays
            cat $GITHUB_WORKSPACE/nyse/nyse_tickers.txt | jq -R -s 'split("\n")[:-1]' > $GITHUB_WORKSPACE/nyse/nyse_tickers.json
            cat $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt | jq -R -s 'split("\n")[:-1]' > $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.json
          else
            echo "No new tickers found - all market cap tickers already exist in exchange data"
          fi
          echo "=================================="
      
      # Fetch and merge general screener data
      - name: Fetch general screener stock data
        run: |
          curl --fail --user-agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:85.0) Gecko/20100101 Firefox/85.0' \
            'https://api.nasdaq.com/api/screener/stocks?tableonly=false&limit=25&offset=0&download=true' \
            -o /tmp/screener.json
      
      - name: Extract and merge screener data into exchange lists
        run: |
          # Extract NYSE and NASDAQ tickers from screener data
          cat /tmp/screener.json | jq -r '.data.rows[] | select(.exchange == "NYSE") | .symbol' > /tmp/screener_nyse.txt
          cat /tmp/screener.json | jq -r '.data.rows[] | select(.exchange == "NASDAQ") | .symbol' > /tmp/screener_nasdaq.txt
          
          # Create combined list of existing tickers for logging
          cat $GITHUB_WORKSPACE/amex/amex_tickers.txt $GITHUB_WORKSPACE/nyse/nyse_tickers.txt $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt | sort -u > /tmp/existing_tickers_screener.txt
          
          # Find new tickers from screener data
          cat /tmp/screener_nyse.txt /tmp/screener_nasdaq.txt | sort -u > /tmp/all_screener_tickers.txt
          comm -23 <(sort /tmp/all_screener_tickers.txt) <(sort /tmp/existing_tickers_screener.txt) > /tmp/new_screener_tickers.txt
          
          # Log the results
          NEW_COUNT=$(wc -l < /tmp/new_screener_tickers.txt)
          TOTAL_SCREENER=$(wc -l < /tmp/all_screener_tickers.txt)
          NYSE_ADDED=$(comm -23 <(sort /tmp/screener_nyse.txt) <(sort $GITHUB_WORKSPACE/nyse/nyse_tickers.txt) | wc -l)
          NASDAQ_ADDED=$(comm -23 <(sort /tmp/screener_nasdaq.txt) <(sort $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt) | wc -l)
          
          echo "=== General Screener Ticker Analysis ==="
          echo "Total screener tickers fetched: $TOTAL_SCREENER"
          echo "New tickers not in existing exchanges: $NEW_COUNT"
          echo "NYSE tickers to be added: $NYSE_ADDED"
          echo "NASDAQ tickers to be added: $NASDAQ_ADDED"
          
          if [ $NEW_COUNT -gt 0 ]; then
            echo "New tickers being added:"
            cat /tmp/new_screener_tickers.txt | head -20
            if [ $NEW_COUNT -gt 20 ]; then
              echo "... and $(($NEW_COUNT - 20)) more"
            fi
            
            # Merge screener tickers into respective exchange files
            cat $GITHUB_WORKSPACE/nyse/nyse_tickers.txt /tmp/screener_nyse.txt | sort -u > /tmp/nyse_screener_merged.txt
            cat $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt /tmp/screener_nasdaq.txt | sort -u > /tmp/nasdaq_screener_merged.txt
            
            mv /tmp/nyse_screener_merged.txt $GITHUB_WORKSPACE/nyse/nyse_tickers.txt
            mv /tmp/nasdaq_screener_merged.txt $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt
            
            # Add screener ticker objects to full JSON files
            cat /tmp/screener.json | jq --argjson new_tickers "$(cat /tmp/new_screener_tickers.txt | jq -R -s 'split("\n")[:-1]')" '.data.rows | map(select(.symbol | IN($new_tickers[])))' > /tmp/new_screener_objects.json
            
            jq -s '.[0] + .[1] | unique_by(.symbol)' $GITHUB_WORKSPACE/nyse/nyse_full_tickers.json /tmp/new_screener_objects.json > /tmp/nyse_screener_full_merged.json
            jq -s '.[0] + .[1] | unique_by(.symbol)' $GITHUB_WORKSPACE/nasdaq/nasdaq_full_tickers.json /tmp/new_screener_objects.json > /tmp/nasdaq_screener_full_merged.json
            
            mv /tmp/nyse_screener_full_merged.json $GITHUB_WORKSPACE/nyse/nyse_full_tickers.json
            mv /tmp/nasdaq_screener_full_merged.json $GITHUB_WORKSPACE/nasdaq/nasdaq_full_tickers.json
            
            # Update JSON arrays
            cat $GITHUB_WORKSPACE/nyse/nyse_tickers.txt | jq -R -s 'split("\n")[:-1]' > $GITHUB_WORKSPACE/nyse/nyse_tickers.json
            cat $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt | jq -R -s 'split("\n")[:-1]' > $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.json
          else
            echo "No new tickers found - all screener tickers already exist in exchange data"
          fi
          echo "=================================="
      
      # Combine all exchange data
      - name: Create all tickers directory
        run: mkdir -p $GITHUB_WORKSPACE/all
      
      - name: Combine all ticker files
        run: cat $GITHUB_WORKSPACE/amex/amex_tickers.txt $GITHUB_WORKSPACE/nyse/nyse_tickers.txt $GITHUB_WORKSPACE/nasdaq/nasdaq_tickers.txt > /tmp/all_tickers.txt
      
      - name: Sort and deduplicate all tickers
        run: cat /tmp/all_tickers.txt | sort -u > $GITHUB_WORKSPACE/all/all_tickers.txt
      
      - name: Generate all tickers JSON array
        run: cat $GITHUB_WORKSPACE/all/all_tickers.txt | jq -R -s 'split("\n")[:-1]' > $GITHUB_WORKSPACE/all/all_tickers.json
      
      - name: commit-new-files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update stock symbols - $(date)"
            git push
          fi
